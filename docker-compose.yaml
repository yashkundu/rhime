version: '3.9'

services:

  auth:
    build: ./auth
    restart: always
    networks:
      - net
    environment:
      - APP_PORT=80
      - nats_url=nats:4222
      - mongo_url=mongo:27017
    depends_on:
      - nats
      - mongo
      - gateway
    env_file:
      - ./authSecrets.env

  comment:
    build: ./comment
    networks:
      - net
    restart: always
    environment:
      - APP_PORT=80
      - nats_url=nats:4222
      - mongo_url=mongo:27017
    depends_on:
      - nats
      - mongo
      - gateway

  feed:
    build: ./feed
    networks:
      - net
    restart: always
    environment:
      - APP_PORT=80
      - nats_url=nats:4222
      - mongo_url=mongo:27017
      - redis_url=redis:6379
      - userGraphView_url=user-graph-view:80
    depends_on:
      - nats
      - mongo
      - redis
      - user-graph-view
      - gateway

  gateway:
    build: ./gateway
    networks:
      - net
    restart: always
    environment:
      - APP_PORT=80
      - nats_url=nats:4222
    ports:
      - "80:80"
    env_file:
      - ./authSecrets.env
    depends_on:
      - nats

  like:
    build: ./like
    networks:
      - net
    restart: always
    environment:
      - APP_PORT=80
      - nats_url=nats:4222
      - mongo_url=mongo:27017
      - redis_url=redis:6379
    depends_on:
      - nats
      - mongo
      - redis
      - gateway

  like-batch-updater:
    build: ./like-batch-updater
    networks:
      - net
    restart: always
    environment:
      - nats_url=nats:4222
      - mongo_url=mongo:27017
    depends_on:
      - nats
      - mongo
      - gateway

  # # add a cron job that daily update the like Count from persisted storage
  like-count:
    build: ./like-count
    networks:
      - net
    restart: always
    environment:
      - APP_PORT=80
      - nats_url=nats:4222
      - mongo_url=mongo:27017
    depends_on:
      - nats
      - mongo
      - gateway

  like-updater:
    build: ./like-updater
    networks:
      - net
    restart: always
    environment:
      - nats_url=nats:4222
      - mongo_url=mongo:27017
      - redis_url=redis:6379
    depends_on:
      - nats
      - mongo
      - redis
      - gateway

  post:
    build: ./post
    networks:
      - net
    restart: always
    environment:
      - APP_PORT=80
      - nats_url=nats:4222
      - mongo_url=mongo:27017
    depends_on:
      - nats
      - mongo
      - gateway

  recommendation:
    build: ./recommendation
    networks:
      - net
    restart: always
    environment:
      - APP_PORT=80
      - mongo_url=mongo:27017
      - redis_url=redis:6379
    depends_on:
      - mongo
      - redis
      - gateway

  spotify:
    build: ./spotify
    networks:
      - net
    restart: always
    environment:
      - APP_PORT=80
      - nats_url=nats:4222
      - mongo_url=mongo:27017
      - redis_url=redis:6379
    env_file:
      - ./spotifySecrets.env
    depends_on:
      - nats
      - mongo
      - redis
      - gateway
    

  user:
    build: ./user
    networks:
      - net
    restart: always
    environment:
      - APP_PORT=80
      - nats_url=nats:4222
      - mongo_url=mongo:27017
    env_file:
      - ./awsSecrets.env
    depends_on:
      - nats
      - mongo
      - gateway

  user-graph:
    build: ./user-graph
    networks:
      - net
    restart: always
    environment:
      - APP_PORT=80
      - nats_url=nats:4222
      - mongo_url=mongo:27017
    depends_on:
      - nats
      - mongo
      - gateway

  user-graph-view:
    build: ./user-graph-view
    networks:
      - net
    restart: always
    environment:
      - APP_PORT=80
      - mongo_url=mongo:27017
    depends_on:
      - mongo
      - gateway

  client:
    build: ./client
    networks:
      - net
    restart: always

  redis:
    image: redis:alpine
    networks:
      - net
    expose:
      - 6379
    volumes:
      - "redisStorage:/data"
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]

  nats:
    image: nats:alpine
    networks:
      - net
    expose:
      - 4222
    volumes:
      - "jsStorage:/tmp/nats/jetstream"
    command: ["nats-server", "-n", "nats_server", "-js"]

  mongo:
    image: mongo
    restart: always
    networks:
      - net
    expose:
      - 27017
    volumes:
      - "mongoStorage:/data/db"
      - "./initMongoDocker/:/docker-entrypoint-initdb.d/"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    command: ["mongod", "--bind_ip_all", "--replSet", "rep0"]
    
volumes:
  jsStorage:
    driver: local
  mongoStorage:
    driver: local
  redisStorage:
    driver: local

networks:
  net:
    driver: bridge